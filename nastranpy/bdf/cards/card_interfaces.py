from nastranpy.bdf.cards.enums import Seq
from nastranpy.bdf.cards.class_factory import class_factory
from nastranpy.bdf.cards.card_factory import CardFactory
from nastranpy.bdf.cards.padding import Padding
from nastranpy.bdf.cards.field_info import FieldInfo as F


item_types = ('coord', 'elem', 'grid', 'mat', 'prop')
set_types = ('mpc', 'spc', 'load')
tag_types = ('e1D', 'e2D', 'e3D', 'eRigid', 'eSpring', 'eMass', 'ePlot')

card_interfaces = {
    # Grids
    'GRID': class_factory('GRID', 'grid',
        card_scheme=[F(), F(), F('CP', 'coord'), F('xyz', seq_type=Seq.vector), F('CD', 'coord', alternate_name='coord'), F('PS'), F('SEID')]),
    # Coordinate systems
    'CORD2R': class_factory('CORD2R', 'coord',
        card_scheme=[F(), F(), F('RID', 'coord'), F('A', seq_type=Seq.vector), F('B', seq_type=Seq.vector),
                     F('C', seq_type=Seq.vector)]),
    'CORD2C': class_factory('CORD2C', 'coord',
        card_scheme=[F(), F(), F('RID', 'coord'), F('A', seq_type=Seq.vector), F('B', seq_type=Seq.vector),
                     F('C', seq_type=Seq.vector)]),
    'CORD2S': class_factory('CORD2S', 'coord',
        card_scheme=[F(), F(), F('RID', 'coord'), F('A', seq_type=Seq.vector), F('B', seq_type=Seq.vector),
                     F('C', seq_type=Seq.vector)]),
    'CORD1R': class_factory('CORD1R', 'coord',
        card_scheme=[F(), F(), F('G1A', 'grid'), F('G2A', 'grid'), F('G3A', 'grid'), F(other_card=True)]),
    'CORD1C': class_factory('CORD1C', 'coord',
        card_scheme=[F(), F(), F('G1A', 'grid'), F('G2A', 'grid'), F('G3A', 'grid'), F(other_card=True)]),
    'CORD1S': class_factory('CORD1S', 'coord',
        card_scheme=[F(), F(), F('G1A', 'grid'), F('G2A', 'grid'), F('G3A', 'grid'), F(other_card=True)]),
    # Materials
    'MAT1': class_factory('MAT1', 'mat',
        card_scheme=[F(), F(), F('E'), F('G'), F('NU'), F('RHO'), F('A'), F('TREF'), F('GE'),
                     F('ST'), F('SC'), F('SS'), F('MCSID', 'coord')]),
    'MAT2': class_factory('MAT2', 'mat',
        card_scheme=[F(), F(), F('G11'), F('G12'), F('G13'), F('G22'), F('G23'), F('G33'), F('RHO'),
                     F('A1'), F('A2'), F('A3'), F('TREF'), F('GE'), F('ST'), F('SC'), F('SS'),
                     F('MCSID', 'coord')]),
    'MAT3': class_factory('MAT3', 'mat',
        card_scheme=[F(), F(), F('EX'), F('ETH'), F('EZ'), F('NUXTH'), F('NUTHZ'), F('NUZX'), F('RHO'),
                     F(), F(), F('GZX'), F('AX'), F('ATH'), F('AZ'), F('TREF'), F('GE')]),
    'MAT8': class_factory('MAT8', 'mat',
        card_scheme=[F(), F(), F('E1'), F('E2'), F('NU12'), F('G12'), F('G1Z'), F('G2Z'), F('RHO'),
                     F('A1'), F('A2'), F('TREF'), F('Xt'), F('Xc'), F('Yt'), F('Yc'), F('S'),
                     F('GE'), F('F12'), F('STRN')]),
    'MAT9': class_factory('MAT9', 'mat',
        card_scheme=[F(), F(), F('G11'), F('G12'), F('G13'), F('G14'), F('G15'), F('G16'), F('G22'),
                     F('G23'), F('G24'), F('G25'), F('G26'), F('G33'), F('G34'), F('G35'), F('G36'),
                     F('G44'), F('G45'), F('G46'), F('G55'), F('G56'), F('G66'), F('RHO'), F('A1'),
                     F('A2'), F('A3'), F('A4'), F('A5'), F('A6'), F('TREF'), F('GE')]),
    # Elements
    'CROD': class_factory('CROD', 'elem', card_tag='e1D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=2, update_grid=True)]),
    'CONROD': class_factory('CONROD', 'elem', card_tag='e1D',
        card_scheme=[F(), F(), F('grids', 'grid', seq_type=Seq.list, length=2, update_grid=True), F('mat', 'mat'), F('A'), F('J'), F('C'), F('NSM')]),
    'CBAR': class_factory('CBAR', 'elem', card_tag='e1D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=2, update_grid=True), F('v', 'grid', seq_type=Seq.vector, alternate_name='G0'), F('OFFT'),
                     F('PA'), F('PB'), F('offsetA', seq_type=Seq.vector), F('offsetB', seq_type=Seq.vector)]),
    'CBEAM': class_factory('CBEAM', 'elem', card_tag='e1D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=2, update_grid=True), F('v', 'grid', seq_type=Seq.vector, alternate_name='G0'), F('OFFT'),
                     F('PA'), F('PB'), F('offsetA', seq_type=Seq.vector), F('offsetB', seq_type=Seq.vector),
                     F('SA', 'grid'), F('SB', 'grid')]),
    'CQUAD4': class_factory('CQUAD4', 'elem', card_tag='e2D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=4, update_grid=True), F('THETA', 'coord', alternate_name='MCID'), F('ZOFFS'),
                     F(), F('TFLAG'), F('T1'), F('T2'), F('T3'), F('T4')]),
    'CTRIA3': class_factory('CTRIA3', 'elem', card_tag='e2D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=3, update_grid=True), F('THETA', 'coord', alternate_name='MCID'), F('ZOFFS'),
                     F(), F('TFLAG'), F('T1'), F('T2'), F('T3')]),
    'CTETRA': class_factory('CTETRA', 'elem', card_tag='e3D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=10, update_grid=True)]),
    'CPENTA': class_factory('CPENTA', 'elem', card_tag='e3D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=15, update_grid=True)]),
    'CHEXA': class_factory('CHEXA', 'elem', card_tag='e3D',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=20, update_grid=True)]),
    'RBE2': class_factory('RBE2', 'elem', card_tag='eRigid',
        card_scheme=[F(), F(), F('master_grid', 'grid', update_grid=True), F('CM'), F('slave_grids', 'grid', seq_type=Seq.set, update_grid=True), F('ALPHA')]),
    'RBE3': class_factory('RBE3', 'elem', card_tag='eRigid',
        card_scheme=[F(), F(), F(), F('master_grid', 'grid', update_grid=True), F('REFC'),
                     F('slaves', seq_type=Seq.list, subscheme=[F('WT'), F('C'), F('grids', 'grid', seq_type=Seq.set, update_grid=True)]),
                     F('UM', seq_type=Seq.list, subscheme=[F('GM', 'grid'), F('CM')], optional=True),
                     F('ALPHA', optional=True)]),
    'CBUSH': class_factory('CBUSH', 'elem', card_tag='eSpring',
        card_scheme=[F(), F(), F('prop', 'prop'), F('grids', 'grid', seq_type=Seq.list, length=2, update_grid=True), F('v', 'grid', seq_type=Seq.vector, alternate_name='G0'), F('CID', 'coord'),
                     F('S'), F('OCID', 'coord'), F('offset', seq_type=Seq.vector)]),
    'CONM2': class_factory('CONM2', 'elem', card_tag='eMass',
        card_scheme=[F(), F(), F('grids', 'grid', seq_type=Seq.list, length=1, update_grid=True), F('CID', 'coord', alternate_name='coord'), F('M'), F('offset', seq_type=Seq.vector), F(),
                     F('I11'), F('I21'), F('I22'), F('I31'), F('I32'), F('I33')]),
    'PLOTEL': class_factory('PLOTEL', 'elem', card_tag='ePlot',
        card_scheme=[F(), F(), F('grids', 'grid', seq_type=Seq.list, length=2, update_grid=True)]),
    # Properties
    'PROD': class_factory('PROD', 'prop',
        card_scheme=[F(), F(), F('mat', 'mat'), F('A'), F('J'), F('C'), F('NSM')]),
    'PBAR': class_factory('PBAR', 'prop',
        card_scheme=[F(), F(), F('mat', 'mat'), F('A'), F('I1'), F('I2'), F('J'), F('NSM'), F(),
                     F('C1'), F('C2'), F('D1'), F('D2'), F('E1'), F('E2'), F('F1'), F('F2'),
                     F('K1'), F('K2'), F('I12')]),
    'PBARL': class_factory('PBARL', 'prop',
        card_scheme=[F(), F(), F('mat', 'mat'), F('GROUP'), F('TYPE'), F(), F(), F(), F(), F('data', seq_type=Seq.list, length=-1)]),
    'PBEAM': class_factory('PBEAM', 'prop',
        card_scheme=[F(), F(), F('mat', 'mat'), F('A'), F('I1'), F('I2'), F('I12'), F('J'), F('NSM'),
                     F('C1'), F('C2'), F('D1'), F('D2'), F('E1'), F('E2'), F('F1'), F('F2'),
                     F('stations', seq_type=Seq.list, subscheme=[F('SO'), F('X_XB'), F('A'), F('I1'), F('I2'), F('I12'), F('J'), F('NSM'),
                                                                 F('C1'), F('C2'), F('D1'), F('D2'), F('E1'), F('E2'), F('F1'), F('F2')]),
                     F('K1'), F('K2'), F('S1'), F('S2'), F('NSI_A'), F('NSI_B'), F('CW_A'), F('CW_B'),
                     F('M1_A'), F('M2_A'), F('M1_B'), F('M2_B'), F('N1_A'), F('N2_A'), F('N1_B'), F('N2_B')]),
    'PBEAML': class_factory('PBEAML', 'prop',
        card_scheme=[F(), F(), F('mat', 'mat'), F('GROUP'), F('TYPE'), F(), F(), F(), F(), F('data', seq_type=Seq.list, length=-1)]),
    'PSHELL': class_factory('PSHELL', 'prop',
        card_scheme=[F(), F(), F('mat1', 'mat'), F('T', alternate_name='thickness'), F('mat2', 'mat'), F('BMIR'), F('mat3', 'mat'), F('TST'), F('NSM'),
                     F('Z1'), F('Z2'), F('mat4', 'mat')]),
    'PCOMP': class_factory('PCOMP', 'prop',
        card_scheme=[F(), F(), F('Z0'), F('NSM'), F('SB'), F('FT'), F('TREF'), F('GE'), F('LAM'),
                     F('plies', seq_type=Seq.list, subscheme=[F('mat', 'mat'), F('T'), F('THETA'), F('SOUT')])]),
    'PCOMPG': class_factory('PCOMPG', 'prop',
        card_scheme=[F(), F(), F('Z0'), F('NSM'), F('SB'), F('FT'), F('TREF'), F('GE'), F('LAM'),
                     F('plies', seq_type=Seq.list, subscheme=[F('id'), F('mat', 'mat'), F('T'), F('THETA'), F('SOUT')])], card_padding=Padding(9, {6, 7, 8})),
    'PSOLID': class_factory('PSOLID', 'prop',
        card_scheme=[F(), F(), F('mat', 'mat'), F('CORDM', 'coord'), F('IN'), F('STRESS'), F('ISOP'), F('FCTN'), F('COROT')]),
    'PBUSH': class_factory('PBUSH', 'prop',
        card_scheme=[F(), F(),
                     F('K', subscheme=[F('K1'), F('K2'), F('K3'), F('K4'), F('K5'), F('K6')], optional=True),
                     F('B', subscheme=[F('B1'), F('B2'), F('B3'), F('B4'), F('B5'), F('B6')], optional=True),
                     F('GE', subscheme=[F('GE1'), F('GE2'), F('GE3'), F('GE4'), F('GE5'), F('GE6')], optional=True),
                     F('RCV', subscheme=[F('SA'), F('ST'), F('EA'), F('ET')], optional=True),
                     F('M', optional=True)], card_padding=Padding(9, {1})),
    # MPCs
    'MPC': class_factory('MPC', 'mpc',
        card_scheme=[F(), F(), F('equation', seq_type=Seq.list, subscheme=[F('G', 'grid'), F('C'), F('A')])], card_padding=Padding(8, {1, 8})),
    'MPCADD': class_factory('MPCADD', 'mpc',
        card_scheme=[F(), F(), F('sets', 'mpc', seq_type=Seq.set)]),
    # SPCs
    'SPC': class_factory('SPC', 'spc',
        card_scheme=[F(), F(), F('G1', 'grid'), F('C1'), F('D1'), F('G2', 'grid'), F('C2'), F('D2')]),
    'SPCD': class_factory('SPCD', 'spc',
        card_scheme=[F(), F(), F('G1', 'grid'), F('C1'), F('D1'), F('G2', 'grid'), F('C2'), F('D2')]),
    'SPC1': class_factory('SPC1', 'spc',
        card_scheme=[F(), F(), F('C'), F('grids', 'grid', seq_type=Seq.set)]),
    'SPCADD': class_factory('SPCADD', 'spc',
        card_scheme=[F(), F(), F('sets', 'spc', seq_type=Seq.set)]),
    # LOADs
    'FORCE': class_factory('FORCE', 'load',
        card_scheme=[F(), F(), F('G', 'grid'), F('CID', 'coord'), F('F'), F('n', seq_type=Seq.vector)]),
    'MOMENT': class_factory('MOMENT', 'load',
        card_scheme=[F(), F(), F('G', 'grid'), F('CID', 'coord'), F('M'), F('n', seq_type=Seq.vector)]),
    'PLOAD4': class_factory('PLOAD4', 'load',
        card_scheme=[F(), F(), F('elem', 'elem'), F('P1'), F('P2'), F('P3'), F('P4'), F('G1', 'grid'), F('G3', 'grid', alternate_name='G4'),
                     F('CID', 'coord'), F('n', seq_type=Seq.vector), F('SORL'), F('LDIR')]),
}

card_factory = CardFactory(card_interfaces)
item_type_sorting = {item_type: str(i).ljust(2, '0') for i, item_type in enumerate(item_types)}

def sorted_cards(cards):
    return sorted(cards, key=lambda card: ('99' if card.type is None else
                                           item_type_sorting[card.type]) +
                                          card.name.ljust(8, '0') +
                                          str(card.id).rjust(8, '0'))
